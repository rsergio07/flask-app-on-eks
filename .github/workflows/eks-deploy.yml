name: Deploy to EKS

on:
  push:
    branches:
      - aws-projects
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: aws-projects

      - name: Create IAM role for EKS
        uses: aws-actions/aws-iam@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}  # Define your AWS region
          create-role: |
            {
              "RoleName": "eks-service-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "eks.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
            }
      - name: Create VPC for EKS
        run: |
          aws ec2 create-vpc --cidr-block 10.0.0.0/16 --tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=vpc-for-eks}]'

      - name: Create subnets for EKS
        run: |
          aws ec2 create-subnet --vpc-id <vpc-id> --cidr-block 10.0.1.0/24 --tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=subnet-01-for-eks}]'
          aws ec2 create-subnet --vpc-id <vpc-id> --cidr-block 10.0.2.0/24 --tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=subnet-02-for-eks}]'

      - name: Create security group for EKS
        run: |
          aws ec2 create-security-group --group-name sg-for-eks --description "Security group for EKS" --vpc-id <vpc-id>

      - name: Authorize inbound and outbound traffic for security group
        run: |
          aws ec2 authorize-security-group-ingress --group-name sg-for-eks --protocol -1 --cidr 0.0.0.0/0
          aws ec2 authorize-security-group-egress --group-name sg-for-eks --protocol -1 --cidr 0.0.0.0/0

      - name: Create EKS cluster
        run: |
          aws eks create-cluster \
            --name my-eks-cluster \
            --role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/eks-service-role \
            --resources-vpc-config subnetIds=<subnet-01-id>,<subnet-02-id>,securityGroupIds=<security-group-id>
  
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name my-eks-cluster

      - name: Build Docker image
        run: docker build -t my-ecr-repo/my-rest-api:latest .
  
      - name: Authenticate Docker to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
  
      - name: Push Docker image to ECR
        run: docker push my-ecr-repo/my-rest-api:latest
  
      - name: Deploy REST API app to EKS
        run: |
          set -e
          kubectl apply -f deployment.yml
          kubectl apply -f service.yaml
